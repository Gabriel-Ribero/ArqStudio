<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>